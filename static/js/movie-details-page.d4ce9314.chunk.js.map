{"version":3,"sources":["services/movies-api.js","components/Cast/cast.module.css","pages/MovieDetailsPage/movieDetailsPage.module.css","components/Cast/Cast.js","components/Reviews/Reviews.js","pages/MovieDetailsPage/MovieDetailsPage.js"],"names":["API_KEY","fetchTrendingMovies","axios","get","then","data","results","fetchMoviesByQuery","query","fetchMovies","movieId","fetchAboutActors","fetchReviews","module","exports","Cast","useParams","useState","cast","setCast","useEffect","className","styles","container","cardSet","map","actor","item","card","profile_path","cardThumb","src","alt","name","actorName","character","id","Reviews","reviews","setReviews","length","review","author","content","MovieDetailsPage","history","useHistory","location","useLocation","useRouteMatch","url","path","movie","setMovie","movieDetailsPage","onClick","push","state","from","button","conteiner","imgMovie","poster_path","title","movieDetails","vote_average","overview","genres","genre","to"],"mappings":"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","file":"static/js/movie-details-page.d4ce9314.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '26f0b87a7e5dd8e602a6eac9520f212b';\n\nconst fetchTrendingMovies = () => {\n  return axios\n    .get(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n    .then(({ data }) => data.results);\n};\n\nconst fetchMoviesByQuery = query => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}&page=1`,\n    )\n    .then(({ data }) => data.results);\n};\n\nconst fetchMovies = movieId => {\n  return axios\n    .get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(({ data }) => data);\n};\n\nconst fetchAboutActors = movieId => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`,\n    )\n    .then(({ data }) => data);\n};\n\nconst fetchReviews = movieId => {\n  return axios\n    .get(\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&page=1`,\n    )\n    .then(({ data }) => data);\n};\n\nexport {\n  fetchTrendingMovies,\n  fetchMoviesByQuery,\n  fetchMovies,\n  fetchAboutActors,\n  fetchReviews,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"cast_img__nCVZp\",\"title\":\"cast_title__lkhEb\",\"container\":\"cast_container__3h1Lr\",\"cardSet\":\"cast_cardSet__2mVVY\",\"item\":\"cast_item__3q_N9\",\"cardHeading\":\"cast_cardHeading__3JTCL\",\"cardThumb\":\"cast_cardThumb__2jILA\",\"actorName\":\"cast_actorName__2wb2I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieDetailsPage\":\"movieDetailsPage_movieDetailsPage__2lwFW\",\"conteiner\":\"movieDetailsPage_conteiner__1AIN-\",\"movieDetails\":\"movieDetailsPage_movieDetails__qhPWK\",\"imgMovie\":\"movieDetailsPage_imgMovie__OPIO5\",\"button\":\"movieDetailsPage_button__2sxuf\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchAboutActors } from '../../services/movies-api';\n\nimport styles from './cast.module.css';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchAboutActors(movieId).then(data => setCast(data.cast));\n  }, [movieId]);\n\n  return (\n    <div className={styles.container}>\n      <ul className={styles.cardSet}>\n        {cast &&\n          cast.map(actor => (\n            <li key={actor.id} className={styles.item}>\n              <article className={styles.card}>\n                {actor.profile_path && (\n                  <div className={styles.cardThumb}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200/${actor.profile_path}`}\n                      alt={actor.name}\n                    />\n                  </div>\n                )}\n                <p className={styles.actorName}>{actor.name}</p>\n                <p className={styles.actorName}>{actor.character}</p>\n              </article>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../../services/movies-api';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(data => setReviews(data.results));\n  }, [movieId]);\n\n  if (reviews && reviews.length > 0) {\n    return (\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  return <p>We don't have any reviews for this movie</p>;\n}\n","import { NavLink, Route, useRouteMatch } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router';\nimport { fetchMovies } from '../../services/movies-api';\nimport Cast from '../../components/Cast/Cast';\nimport Reviews from '../../components/Reviews/Reviews';\n\nimport styles from './movieDetailsPage.module.css';\n\nexport default function MovieDetailsPage() {\n  const history = useHistory();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const { url, path } = useRouteMatch();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    fetchMovies(movieId).then(setMovie);\n  }, [movieId]);\n\n  const onGoBack = () => {\n    history.push(location?.state?.from ?? '/');\n  };\n\n  return (\n    <div className={styles.movieDetailsPage}>\n      <button onClick={onGoBack} className={styles.button}>\n        Go Back\n      </button>\n\n      {movie && (\n        <div className={styles.conteiner}>\n          <img\n            className={styles.imgMovie}\n            src={`https://image.tmdb.org/t/p/w200/${movie.poster_path}`}\n            alt={movie.title}\n          />\n          <div className={styles.movieDetails}>\n            <h1 className={styles.title}>{movie.title}</h1>\n            <p>User Score: {movie.vote_average * 10}%</p>\n\n            <h2 className={styles.title}>Overview</h2>\n            <p>{movie.overview}</p>\n\n            <h2 className={styles.title}>Genres</h2>\n            <p>{movie.genres.map(genre => `${genre.name} `)}</p>\n          </div>\n        </div>\n      )}\n      <div>\n        <h3 className={styles.title}>Additional information</h3>\n        <ul>\n          <li>\n            <NavLink to={`${url}/cast`}>Cast</NavLink>\n          </li>\n          <li>\n            <NavLink to={`${url}/reviews`}>Reviews</NavLink>\n          </li>\n        </ul>\n\n        <hr />\n        <Route path={`${path}/cast`}>\n          <Cast />\n        </Route>\n        <Route path={`${path}/reviews`}>\n          <Reviews />\n        </Route>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}